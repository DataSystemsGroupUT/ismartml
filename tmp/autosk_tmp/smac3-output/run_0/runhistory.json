{"data": [[[1, "{\"task_id\": \"d74860caaa557f473ce23908ff7ba369\"}", 0], [0.026966292134831482, 0.5993301868438721, {"__enum__": "StatusType.SUCCESS"}, {"duration": 0.560236930847168, "num_run": 2, "train_loss": 0.0, "configuration_origin": "Initial design"}]], [[2, "{\"task_id\": \"d74860caaa557f473ce23908ff7ba369\"}", 0], [0.011235955056179803, 0.54721999168396, {"__enum__": "StatusType.SUCCESS"}, {"duration": 0.5244686603546143, "num_run": 3, "train_loss": 0.0011086474501108556, "configuration_origin": "Initial design"}]], [[3, "{\"task_id\": \"d74860caaa557f473ce23908ff7ba369\"}", 0], [1.0, 15.011395692825317, {"__enum__": "StatusType.CRASHED"}, {"traceback": "Traceback (most recent call last):\n  File \"/home/ubuntu/hyper/auto-sklearn/autosklearn/evaluation/__init__.py\", line 30, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/home/ubuntu/hyper/auto-sklearn/autosklearn/evaluation/train_evaluator.py\", line 648, in eval_holdout\n    evaluator.fit_predict_and_loss(iterative=iterative)\n  File \"/home/ubuntu/hyper/auto-sklearn/autosklearn/evaluation/train_evaluator.py\", line 160, in fit_predict_and_loss\n    i, train_indices=train_split, test_indices=test_split\n  File \"/home/ubuntu/hyper/auto-sklearn/autosklearn/evaluation/train_evaluator.py\", line 406, in _partial_fit_and_predict\n    self.Y_train[train_indices])\n  File \"/home/ubuntu/hyper/auto-sklearn/autosklearn/evaluation/abstract_evaluator.py\", line 481, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/home/ubuntu/hyper/auto-sklearn/autosklearn/pipeline/base.py\", line 93, in fit\n    self.fit_estimator(X, y, **fit_params)\n  File \"/home/ubuntu/hyper/auto-sklearn/autosklearn/pipeline/base.py\", line 110, in fit_estimator\n    self._final_estimator.fit(X, y, **fit_params)\n  File \"/home/ubuntu/hyper/auto-sklearn/autosklearn/pipeline/components/base.py\", line 402, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/home/ubuntu/hyper/auto-sklearn/autosklearn/pipeline/components/base.py\", line 163, in fit\n    self.iterative_fit(X, y, n_iter=n_iter, sample_weight=sample_weight)\n  File \"/home/ubuntu/hyper/auto-sklearn/autosklearn/pipeline/components/classification/gradient_boosting.py\", line 90, in iterative_fit\n    self.estimator.fit(X, y, sample_weight=sample_weight)\n  File \"/home/ubuntu/hyper/autosk/lib/python3.6/site-packages/sklearn/ensemble/gradient_boosting.py\", line 1034, in fit\n    begin_at_stage, monitor, X_idx_sorted)\n  File \"/home/ubuntu/hyper/autosk/lib/python3.6/site-packages/sklearn/ensemble/gradient_boosting.py\", line 1089, in _fit_stages\n    X_csc, X_csr)\n  File \"/home/ubuntu/hyper/autosk/lib/python3.6/site-packages/sklearn/ensemble/gradient_boosting.py\", line 798, in _fit_stage\n    self.learning_rate, k=k)\n  File \"/home/ubuntu/hyper/autosk/lib/python3.6/site-packages/sklearn/ensemble/gradient_boosting.py\", line 249, in update_terminal_regions\n    y_pred[:, k], sample_weight)\n  File \"/home/ubuntu/hyper/autosk/lib/python3.6/site-packages/sklearn/ensemble/gradient_boosting.py\", line 567, in _update_terminal_region\n    terminal_region = np.where(terminal_regions == leaf)[0]\n  File \"/home/ubuntu/hyper/autosk/lib/python3.6/site-packages/pynisher/limit_function_call.py\", line 31, in handler\n    raise(TimeoutException)\npynisher.limit_function_call.TimeoutException\n", "error": "TimeoutException()", "configuration_origin": "Initial design"}]], [[4, "{\"task_id\": \"d74860caaa557f473ce23908ff7ba369\"}", 0], [1.0, 2.0042898654937744, {"__enum__": "StatusType.TIMEOUT"}, {"error": "Timeout", "configuration_origin": "Initial design"}]]], "configs": {"1": {"balancing:strategy": "none", "categorical_encoding:__choice__": "one_hot_encoding", "classifier:__choice__": "random_forest", "imputation:strategy": "mean", "preprocessor:__choice__": "no_preprocessing", "rescaling:__choice__": "standardize", "categorical_encoding:one_hot_encoding:use_minimum_fraction": "True", "classifier:random_forest:bootstrap": "True", "classifier:random_forest:criterion": "gini", "classifier:random_forest:max_depth": "None", "classifier:random_forest:max_features": 0.5, "classifier:random_forest:max_leaf_nodes": "None", "classifier:random_forest:min_impurity_decrease": 0.0, "classifier:random_forest:min_samples_leaf": 1, "classifier:random_forest:min_samples_split": 2, "classifier:random_forest:min_weight_fraction_leaf": 0.0, "classifier:random_forest:n_estimators": 100, "categorical_encoding:one_hot_encoding:minimum_fraction": 0.01}, "2": {"balancing:strategy": "weighting", "categorical_encoding:__choice__": "one_hot_encoding", "classifier:__choice__": "libsvm_svc", "imputation:strategy": "mean", "preprocessor:__choice__": "feature_agglomeration", "rescaling:__choice__": "none", "categorical_encoding:one_hot_encoding:use_minimum_fraction": "True", "classifier:libsvm_svc:C": 1.772947230488284, "classifier:libsvm_svc:gamma": 0.0004789329856033374, "classifier:libsvm_svc:kernel": "rbf", "classifier:libsvm_svc:max_iter": -1, "classifier:libsvm_svc:shrinking": "True", "classifier:libsvm_svc:tol": 6.58869648864534e-05, "preprocessor:feature_agglomeration:affinity": "cosine", "preprocessor:feature_agglomeration:linkage": "complete", "preprocessor:feature_agglomeration:n_clusters": 177, "preprocessor:feature_agglomeration:pooling_func": "mean", "categorical_encoding:one_hot_encoding:minimum_fraction": 0.002385546176068135}, "3": {"balancing:strategy": "none", "categorical_encoding:__choice__": "no_encoding", "classifier:__choice__": "gradient_boosting", "imputation:strategy": "most_frequent", "preprocessor:__choice__": "polynomial", "rescaling:__choice__": "minmax", "classifier:gradient_boosting:criterion": "friedman_mse", "classifier:gradient_boosting:learning_rate": 0.14159526341015916, "classifier:gradient_boosting:loss": "deviance", "classifier:gradient_boosting:max_depth": 7, "classifier:gradient_boosting:max_features": 0.8010488230155749, "classifier:gradient_boosting:max_leaf_nodes": "None", "classifier:gradient_boosting:min_impurity_decrease": 0.0, "classifier:gradient_boosting:min_samples_leaf": 3, "classifier:gradient_boosting:min_samples_split": 20, "classifier:gradient_boosting:min_weight_fraction_leaf": 0.0, "classifier:gradient_boosting:n_estimators": 401, "classifier:gradient_boosting:subsample": 0.8073562440607731, "preprocessor:polynomial:degree": 2, "preprocessor:polynomial:include_bias": "True", "preprocessor:polynomial:interaction_only": "False"}, "4": {"balancing:strategy": "weighting", "categorical_encoding:__choice__": "one_hot_encoding", "classifier:__choice__": "gradient_boosting", "imputation:strategy": "mean", "preprocessor:__choice__": "no_preprocessing", "rescaling:__choice__": "standardize", "categorical_encoding:one_hot_encoding:use_minimum_fraction": "True", "classifier:gradient_boosting:criterion": "friedman_mse", "classifier:gradient_boosting:learning_rate": 0.045388141846341344, "classifier:gradient_boosting:loss": "deviance", "classifier:gradient_boosting:max_depth": 10, "classifier:gradient_boosting:max_features": 0.29161769341843435, "classifier:gradient_boosting:max_leaf_nodes": "None", "classifier:gradient_boosting:min_impurity_decrease": 0.0, "classifier:gradient_boosting:min_samples_leaf": 20, "classifier:gradient_boosting:min_samples_split": 2, "classifier:gradient_boosting:min_weight_fraction_leaf": 0.0, "classifier:gradient_boosting:n_estimators": 278, "classifier:gradient_boosting:subsample": 0.7912571599269661, "categorical_encoding:one_hot_encoding:minimum_fraction": 0.00011717632475982631}}}
balancing:strategy categorical {none, weighting} [none]
categorical_encoding:__choice__ categorical {no_encoding, one_hot_encoding} [one_hot_encoding]
classifier:__choice__ categorical {decision_tree, gradient_boosting, random_forest} [random_forest]
imputation:strategy categorical {mean, median, most_frequent} [mean]
preprocessor:__choice__ categorical {no_preprocessing} [no_preprocessing]
rescaling:__choice__ categorical {minmax, none, normalize, quantile_transformer, robust_scaler, standardize} [standardize]
categorical_encoding:one_hot_encoding:use_minimum_fraction categorical {True, False} [True]
classifier:decision_tree:criterion categorical {gini, entropy} [gini]
classifier:decision_tree:max_depth_factor real [0.0, 2.0] [0.5]
classifier:decision_tree:max_features categorical {1.0} [1.0]
classifier:decision_tree:max_leaf_nodes categorical {None} [None]
classifier:decision_tree:min_impurity_decrease categorical {0.0} [0.0]
classifier:decision_tree:min_samples_leaf integer [1, 20] [1]
classifier:decision_tree:min_samples_split integer [2, 20] [2]
classifier:decision_tree:min_weight_fraction_leaf categorical {0.0} [0.0]
classifier:gradient_boosting:criterion categorical {friedman_mse, mse, mae} [mse]
classifier:gradient_boosting:learning_rate real [0.01, 1.0] [0.1]log
classifier:gradient_boosting:loss categorical {deviance} [deviance]
classifier:gradient_boosting:max_depth integer [1, 10] [3]
classifier:gradient_boosting:max_features real [0.1, 1.0] [1.0]
classifier:gradient_boosting:max_leaf_nodes categorical {None} [None]
classifier:gradient_boosting:min_impurity_decrease categorical {0.0} [0.0]
classifier:gradient_boosting:min_samples_leaf integer [1, 20] [1]
classifier:gradient_boosting:min_samples_split integer [2, 20] [2]
classifier:gradient_boosting:min_weight_fraction_leaf categorical {0.0} [0.0]
classifier:gradient_boosting:n_estimators integer [50, 500] [100]
classifier:gradient_boosting:subsample real [0.01, 1.0] [1.0]
classifier:random_forest:bootstrap categorical {True, False} [True]
classifier:random_forest:criterion categorical {gini, entropy} [gini]
classifier:random_forest:max_depth categorical {None} [None]
classifier:random_forest:max_features real [0.0, 1.0] [0.5]
classifier:random_forest:max_leaf_nodes categorical {None} [None]
classifier:random_forest:min_impurity_decrease categorical {0.0} [0.0]
classifier:random_forest:min_samples_leaf integer [1, 20] [1]
classifier:random_forest:min_samples_split integer [2, 20] [2]
classifier:random_forest:min_weight_fraction_leaf categorical {0.0} [0.0]
classifier:random_forest:n_estimators categorical {100} [100]
rescaling:quantile_transformer:n_quantiles integer [10, 2000] [1000]
rescaling:quantile_transformer:output_distribution categorical {uniform, normal} [uniform]
rescaling:robust_scaler:q_max real [0.7, 0.999] [0.75]
rescaling:robust_scaler:q_min real [0.001, 0.3] [0.25]
categorical_encoding:one_hot_encoding:minimum_fraction real [0.0001, 0.5] [0.01]log

categorical_encoding:one_hot_encoding:use_minimum_fraction | categorical_encoding:__choice__ == one_hot_encoding
classifier:decision_tree:criterion | classifier:__choice__ == decision_tree
classifier:decision_tree:max_depth_factor | classifier:__choice__ == decision_tree
classifier:decision_tree:max_features | classifier:__choice__ == decision_tree
classifier:decision_tree:max_leaf_nodes | classifier:__choice__ == decision_tree
classifier:decision_tree:min_impurity_decrease | classifier:__choice__ == decision_tree
classifier:decision_tree:min_samples_leaf | classifier:__choice__ == decision_tree
classifier:decision_tree:min_samples_split | classifier:__choice__ == decision_tree
classifier:decision_tree:min_weight_fraction_leaf | classifier:__choice__ == decision_tree
classifier:gradient_boosting:criterion | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:learning_rate | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:loss | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:max_depth | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:max_features | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:max_leaf_nodes | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:min_impurity_decrease | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:min_samples_leaf | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:min_samples_split | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:min_weight_fraction_leaf | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:n_estimators | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:subsample | classifier:__choice__ == gradient_boosting
classifier:random_forest:bootstrap | classifier:__choice__ == random_forest
classifier:random_forest:criterion | classifier:__choice__ == random_forest
classifier:random_forest:max_depth | classifier:__choice__ == random_forest
classifier:random_forest:max_features | classifier:__choice__ == random_forest
classifier:random_forest:max_leaf_nodes | classifier:__choice__ == random_forest
classifier:random_forest:min_impurity_decrease | classifier:__choice__ == random_forest
classifier:random_forest:min_samples_leaf | classifier:__choice__ == random_forest
classifier:random_forest:min_samples_split | classifier:__choice__ == random_forest
classifier:random_forest:min_weight_fraction_leaf | classifier:__choice__ == random_forest
classifier:random_forest:n_estimators | classifier:__choice__ == random_forest
rescaling:quantile_transformer:n_quantiles | rescaling:__choice__ == quantile_transformer
rescaling:quantile_transformer:output_distribution | rescaling:__choice__ == quantile_transformer
rescaling:robust_scaler:q_max | rescaling:__choice__ == robust_scaler
rescaling:robust_scaler:q_min | rescaling:__choice__ == robust_scaler
categorical_encoding:one_hot_encoding:minimum_fraction | categorical_encoding:one_hot_encoding:use_minimum_fraction == True